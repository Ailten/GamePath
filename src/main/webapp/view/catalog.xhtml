<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html lang="fr"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:h="http://java.sun.com/jsf/html">
<ui:composition template="/WEB-INF/templates/headerContentFooter.xhtml">
    <ui:define name="title">
        #{I18N['application.header.title']}
    </ui:define>
    <ui:define name="content">

        <!-- save historic -->
        <f:metadata>
            <f:event type="preRenderView" listener="#{historicalBean.saveNewPageHistoric('/view/catalog')}"/>
        </f:metadata>

        <!-- title page -->
        <div class="h-content">
            <h1>
                <h:outputText value="#{I18N['application.header.menuListCatalogue']}"/>
            </h1>
        </div>

        <div class="content-table-body-center">

            <h:form id="form-table-product">

                <!-- load list research -->
                <f:metadata>
                    <f:event type="preRenderView" listener="#{productTheoricListBean.doResearch()}"/>
                </f:metadata>

                <!-- table -->
                <p:dataTable var="product"
                             value="#{productTheoricListBean.entityFiltered}"
                             sortMode="single"
                             allowUnsorting="true"
                             rows="10"
                             paginator="true"
                             paginatorPosition="bottom"
                             paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                             currentPageReportTemplate="{startRecord}-{endRecord} sur {totalRecords}"
                             rowsPerPageTemplate="5,10,20">

                    <f:facet name="header">
                        <p:outputPanel class="panel-table-header">
                            <p:outputPanel>
                                <!-- input research -->
                                <p:inputText value="#{productTheoricListBean.filter}"
                                             placeholder="#{I18N['application.tablePage.placeHolderInputFilter']}"
                                             validatorMessage="#{I18N['application.tablePage.errorInputFilter']}">
                                    <p:ajax event="keyup" update="form-table-product"/>
                                </p:inputText>
                            </p:outputPanel>
                            <p:outputPanel class="panel-align-right">
                                <!-- button redirect page create element -->
                                <p:commandButton value="#{I18N['application.header.menuAddProduct']}"
                                                 rendered="#{connectionBean.isUserHasPermission('create-product')}"
                                                 ajax="false"
                                                 validateClient="false"
                                                 immediate="true"
                                                 action="#{connectionBean.redirectCrudPage('/view/crudProduct', productTheoricBean, null, 'create')}"/>
                            </p:outputPanel>
                        </p:outputPanel>
                    </f:facet>


                    <!-- ______ start column data ______ -->


                    <p:column headerText="#{I18N['application.crudPage.headerComboBox']}"
                              sortBy="#{product.title}">
                        <h:outputText value="#{product.title}"/>
                    </p:column>

                    <p:column headerText="#{I18N['application.tableProductTheoric.labelPrice']}"
                              sortBy="#{product.priceWithReduction}">
                        <p:outputPanel class=" #{(product.hasReduction()? 'text-line-through': '')} panel-align-right">
                            <h:outputText value="#{product.price}">
                                <f:convertNumber minFractionDigits="2"/>
                            </h:outputText>
                            <span>€</span>
                        </p:outputPanel>
                        <p:outputPanel rendered="#{product.hasReduction()}" class="price-reduction panel-align-right">
                            <h:outputText value="#{product.priceWithReduction}">
                                <f:convertNumber minFractionDigits="2"/>
                            </h:outputText>
                            <span>€</span>
                        </p:outputPanel>
                    </p:column>

                    <p:column headerText="#{I18N['application.tableProductTheoric.labelCategory']}"
                              responsivePriority="2">
                        <h:outputText value="#{product.listCategory.get(0).title}"/>
                        <h:outputText value=", ..." rendered="#{product.listCategory.size() > 1}"/>
                    </p:column>

                    <p:column headerText="#{I18N['application.tableProductTheoric.labelOperatingSystem']}"
                              responsivePriority="3">
                        <h:outputText value="#{product.listOperatingSystem.get(0).title}"/>
                        <h:outputText value=", ..." rendered="#{product.listOperatingSystem.size() > 1}"/>
                    </p:column>

                    <p:column headerText="#{I18N['application.tableProductTheoric.labelLanguage']}"
                              responsivePriority="4">
                        <h:outputText value="#{product.listLanguage.get(0).title}"/>
                        <h:outputText value=", ..." rendered="#{product.listLanguage.size() > 1}"/>
                    </p:column>

                    <p:column headerText="#{I18N['application.tableProductTheoric.labelPegi']}"
                              responsivePriority="5">
                        <h:outputText value="#{product.listPegi.get(0).title}"/>
                        <h:outputText value=", ..." rendered="#{product.listPegi.size() > 1}"/>
                    </p:column>


                    <!-- ______ end column data ______ -->


                    <p:column headerText="#{I18N['application.tablePage.buttonRead']}">
                        <p:commandButton action="#{connectionBean.redirectCrudPage('/view/crudProduct', productTheoricBean, product, 'read')}"
                                         icon="pi pi-bars"/>
                    </p:column>
                    <p:column headerText="#{I18N['application.tablePage.buttonUpdate']}"
                              rendered="#{connectionBean.isUserHasPermission('update-product')}">
                        <p:commandButton action="#{connectionBean.redirectCrudPage('/view/crudProduct', productTheoricBean, product, 'update')}"
                                         icon="pi pi-pencil"/>
                    </p:column>
                    <!-- delete not allow on this entity, only update isActive -/->
                    <p:column headerText="#{I18N['application.tablePage.buttonDelete']}"
                              rendered="#{connectionBean.isUserHasPermission('delete-product')}">
                        <p:commandButton action="#{productTheoricBean.delete(product)}"
                                         update="form-table-product"
                                         icon="pi pi-trash"/>
                    </p:column>
                    -->
                    <p:column headerText="#{I18N['application.tableProductTheoric.buttonAddBasket']}"
                              rendered="#{connectionBean.isUserHasPermission('create-basketproduct')}">
                        <p:commandButton action="#{basketProductTheoricBean.addBasket(product)}"
                                         update="form-table-product"
                                         icon="pi pi-shopping-cart"
                                         disabled="#{!product.isValideForSell()}"/>
                    </p:column>



                </p:dataTable>

            </h:form>

        </div>

    </ui:define>
</ui:composition>
</html>